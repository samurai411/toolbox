import os
from weasyprint import HTML
from rich import print

def generate_pdf_report(subnet, live_hosts, pdf_filename):
    # Initialisation du contenu HTML avec l'en-t√™te
    html_content = f"""
    <h1 style="font-size: 24px;">Rapport d'audit pour le sous-r√©seau : {subnet} üìã</h1>
    <h2>Table des mati√®res</h2>
    <ul>
        <li><a href="#retr">H√¥tes retrouv√©s üîé</a></li>
        <li><a href="#live_hosts">H√¥tes vuln√©rables ‚ö†Ô∏è</a></li>
    </ul>
    <hr>
    <h2 id="retr">H√¥tes retrouv√©s üîé</h2>
    <table border="1">
        <tr>
            <th>H√¥tes trouv√©s lors du scan</th>
        </tr>
    """
    # Ajouter chaque h√¥te actif √† la cat√©gorie Port√©e dans un tableau
    for host_info in live_hosts:
        host = host_info['host']
        html_content += f"<tr><td>{host}</td></tr>"
    html_content += """
    </table>
    <div style='page-break-after: always;'></div>    
    <h2 id="live_hosts">H√¥tes vuln√©rables ‚ö†Ô∏è</h2>
    """
    # Ajouter uniquement les h√¥tes actifs avec des vuln√©rabilit√©s au contenu HTML
    for host_info in live_hosts:
        host = host_info['host']
        services = host_info.get('services', {})
        for port, service in services.items():
            if service['name'] == 'ftp' and service['product'] == 'vsftpd' and service['version'] == '2.3.4':
                html_content += f"""
                <h3>- H√¥te : {host}</h3>
                <ul>
                    <li>Port : {port}, Protocole : {service['name']}, Service : {service['product']} {service['version']}</li>
                </ul>
                <h4>CVE-2011-2523</h4>
                <p>Cette backdoor permet aux attaquants d'ex√©cuter du code √† distance en tant que root.</p>
                <h4>√âtapes de Rem√©diation :</h4>
                <p>1. Appliquer la deni√®re mise √† jour de vsftpd.</p>
                <p>2. Restreindre l'acc√®s r√©seau aux services vuln√©rables.</p>
                """
            if service['product'] == 'OpenResty web app server' and 'APISIX/2.11.0' in service['http_server_header']:
                html_content += f"""
                <h3>- H√¥te : {host}</h3>
                <ul>
                    <li>Port : {port}, Protocole : {service['name']}, Service : {service['product']} {service['http_server_header']}</li>
                </ul>
                <h4>CVE-2020-13945</h4>
                <p>Cette vuln√©rabilit√© permet aux attaquants d'avoir une √©xecution de code √† distance.</p>
                <h4>√âtapes de Rem√©diation :</h4>
                <p>1. Mettre √† jour Apache APISIX vers la derni√®re version.</p>
                <p>2. Restreindre l'acc√®s r√©seau aux services vuln√©rables.</p>
                """
            if service['name'] == 'http' and 'Jetty(11.0.14)' in service['http_server_header']:
                html_content += f"""
                <h3>- H√¥te : {host}</h3>
                <ul>
                    <li>Port : {port}, Protocole : {service['name']}, Service : Jetty {service['http_server_header']}</li>
                </ul>
                <h4>CVE-2023-38646</h4>
                <p>Cette vuln√©rabilit√© permet aux attaquants d'effectuer une injection de commande non authentifi√©.</p>
                <h4>√âtapes de Rem√©diation :</h4>
                <p>1. Mettre √† jour Metabase vers la derni√®re version.</p>
                <p>2. Restreindre l'acc√®s r√©seau aux services vuln√©rables.</p>
                """
    
    # D√©finir le nom et le chemin du fichier PDF
    pdf_path = os.path.join(os.getcwd(), f"{pdf_filename}")
    # G√©n√©rer le PDF √† partir du contenu HTML
    HTML(string=html_content).write_pdf(pdf_path)
    print("")
    print(f"[green bold][+][/green bold] Rapport d'audit g√©n√©r√© : [green bold]{pdf_path}[/green bold]")
    print("")
